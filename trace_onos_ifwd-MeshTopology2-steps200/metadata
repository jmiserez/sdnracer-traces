{
  "additional_metadata": null,
  "argv": [
    "./simulator.py",
    "-L",
    "logging.cfg",
    "-c",
    "config/onos.py"
  ],
  "cwd": "/home/jeremie/mscthesis/jmiserez/sts",
  "host": {
    "cpu_info": "Intel(R) Core(TM) i7-2720QM CPU @ 2.20GHz",
    "free": "total       used       free     shared    buffers     cached\nMem:      16310124   14870060    1440064      94964     353916    6045100\n-/+ buffers/cache:    8471044    7839080\nSwap:     16650236      47808   16602428",
    "name": "espresso",
    "num_cores": "8",
    "uptime": "16:32:22 up 3 days, 56 min,  8 users,  load average: 1.43, 0.68, 0.73"
  },
  "modules": {
    "hassel": {
      "branch": "HEAD",
      "commit": "31afb29fa66783f5a66765bc186509b65ffc023e",
      "diff": "",
      "status": "HEAD detached at 31afb29\nnothing to commit, working directory clean"
    },
    "pox": {
      "branch": "hb",
      "commit": "bdd8a411b6fbbd7cfd50088fc67a86d5a282d5b0",
      "diff": "",
      "status": "On branch hb\nYour branch is up-to-date with 'origin/hb'.\n\nnothing to commit, working directory clean"
    },
    "sts": {
      "branch": "hb",
      "commit": "3e0b37196a2c7c16c9a7ae89b305c702f2b70de3",
      "diff": "diff --git a/all_traces_add_outputs_to_git.sh b/all_traces_add_outputs_to_git.sh\nindex 619a336..9d5c910 100755\n--- a/all_traces_add_outputs_to_git.sh\n+++ b/all_traces_add_outputs_to_git.sh\n@@ -91,7 +91,10 @@ pushd \"$WORKSPACE\" > /dev/null\n git add cross_summary.csv\n popd > /dev/null\n \n-printf \"%s\\x00\" \"${trace_dirs_array[@]}\" | xargs -0 -I{} -n 1 -P 1 bash -c 'func_call_by_name run_per_trace_dir {}'\n-\n+if [ \"${#trace_dirs_array[@]}\" -gt 0 ]\n+then\n+  printf \"%s\\x00\" \"${trace_dirs_array[@]}\" | xargs -0 -I{} -n 1 -P 1 bash -c 'func_call_by_name run_per_trace_dir {}'\n+fi\n+echo \"Done.\"\n \n \ndiff --git a/all_traces_generate_plots.sh b/all_traces_generate_plots.sh\nindex fcdd6c8..da6dda0 100755\n--- a/all_traces_generate_plots.sh\n+++ b/all_traces_generate_plots.sh\n@@ -125,6 +125,10 @@ if [ \"$IS_OVERRIDE_NUM_THREADS\" = false ]\n   then\n     NUM_THREADS=$NUM_CPU_CORES\n fi\n+if [ \"${#trace_dirs_array[@]}\" -lt \"$NUM_THREADS\" ]\n+then\n+  NUM_THREADS=\"${#trace_dirs_array[@]}\"\n+fi\n echo \"NUM_CPU_CORES=$NUM_CPU_CORES, NUM_THREADS=$NUM_THREADS\"\n \n pushd \"$WORKSPACE\" > /dev/null\n@@ -133,6 +137,10 @@ pushd \"$1\" > /dev/null\n find \"$WORKSPACE\" -maxdepth 1 -type d -name \"$MATCHPATTERN\" -print0 | sort -nz | xargs -0 $STS_DIR/plot.py --no-plots\n popd > /dev/null\n \n-printf \"%s\\x00\" \"${trace_dirs_array[@]}\" | xargs -0 -I{} -n 1 -P $NUM_THREADS bash -c 'func_call_by_name run_per_trace_dir {}'\n+if [ \"$NUM_THREADS\" -gt 0 ]\n+then\n+  printf \"%s\\x00\" \"${trace_dirs_array[@]}\" | xargs -0 -I{} -n 1 -P $NUM_THREADS bash -c 'func_call_by_name run_per_trace_dir {}'\n+fi\n \n rm -rf \"$CURRENT_TMP_DIR\"\n+echo \"Done.\"\ndiff --git a/all_traces_generate_results.sh b/all_traces_generate_results.sh\nindex 84beee4..4a82415 100755\n--- a/all_traces_generate_results.sh\n+++ b/all_traces_generate_results.sh\n@@ -126,18 +126,25 @@ case $NUM_CPU_CORES in\n esac\n \n if [ \"$IS_OVERRIDE_NUM_THREADS\" = false ]\n-  then\n-    NUM_THREADS=$NUM_CPU_CORES\n+then\n+  NUM_THREADS=$NUM_CPU_CORES\n+fi\n+if [ \"${#trace_dirs_array[@]}\" -lt \"$NUM_THREADS\" ]\n+then\n+  NUM_THREADS=\"${#trace_dirs_array[@]}\"\n fi\n echo \"NUM_CPU_CORES=$NUM_CPU_CORES, NUM_THREADS=$NUM_THREADS\"\n \n-printf \"%s\\x00\" \"${trace_dirs_array[@]}\" | xargs -0 -I{} -n 1 -P $NUM_CPU_CORES bash -c 'func_call_by_name run_per_trace_dir {}'\n-\n-pushd \"$WORKSPACE\" > /dev/null\n-echo \"plot.py --no-plots\"\n-pushd \"$1\" > /dev/null\n-find \"$WORKSPACE\" -maxdepth 1 -type d -name \"$MATCHPATTERN\" -print0 | sort -nz | xargs -0 $STS_DIR/plot.py --no-plots\n-popd > /dev/null\n+if [ \"$NUM_THREADS\" -gt 0 ]\n+then\n+  printf \"%s\\x00\" \"${trace_dirs_array[@]}\" | xargs -0 -I{} -n 1 -P $NUM_CPU_CORES bash -c 'func_call_by_name run_per_trace_dir {}'\n+  pushd \"$WORKSPACE\" > /dev/null\n+  echo \"plot.py --no-plots\"\n+  pushd \"$1\" > /dev/null\n+  find \"$WORKSPACE\" -maxdepth 1 -type d -name \"$MATCHPATTERN\" -print0 | sort -nz | xargs -0 $STS_DIR/plot.py --no-plots\n+  popd > /dev/null\n+fi\n \n rm -rf \"$CURRENT_TMP_DIR\"\n+echo \"Done.\"\n \ndiff --git a/config/experiment_config_lib.py b/config/experiment_config_lib.py\nindex 2c86f7c..85ea702 100644\n--- a/config/experiment_config_lib.py\n+++ b/config/experiment_config_lib.py\n@@ -22,7 +22,7 @@ import re\n import time\n from sts.util.convenience import address_is_ip, find_port, IPAddressSpace\n from sts.entities import Controller, POXController, BigSwitchController, ONOSController\n-from sts.entities.controllers import DummyController\n+from sts.entities.controllers import DummyController, LogfileController\n from collections import defaultdict\n \n log = logging.getLogger(\"controller-config\")\n@@ -32,6 +32,7 @@ controller_type_map = {\n   \"bsc\": BigSwitchController,\n   \"onos\": ONOSController,\n   \"dummy\": DummyController,\n+  \"logfile\": LogfileController,\n }\n \n class ControllerConfig(object):\ndiff --git a/config/onos.py b/config/onos.py\nindex 233fa0c..a9fb38c 100644\n--- a/config/onos.py\n+++ b/config/onos.py\n@@ -10,28 +10,23 @@ from config.application_events import AppCircuitPusher\n \n \n \n-# start_cmd = ('''java -ea -Dlogback.configurationFile=./src/main/resources/logback-trace.xml -jar '''\n-#              '''./target/floodlight.jar '''\n-#               '''-cf ./src/main/resources/hb_learningswitch.properties''')\n-\n-# Uncomment this if you are running Floodlight separately, e.g. for debugging in Eclipse. There must be a controller listening on port 6633.\n-start_cmd = '''echo \"no-op\"'''\n+start_cmd = '''tail -f \"/home/jeremie/Applications/apache-karaf-3.0.3/data/log/karaf.log\"'''\n \n # controllers = [ControllerConfig(start_cmd, controller_type='dummy', cwd='./', address=\"192.168.56.101\", port=6633)]\n-controllers = [ControllerConfig(start_cmd, controller_type='dummy', cwd='./', address=\"127.0.0.1\", port=6633)]\n+controllers = [ControllerConfig(start_cmd, controller_type='logfile', cwd='./')]\n \n-num = 4\n-topology_class = StarTopology\n-topology_params = \"num_hosts=%d\" % num\n-#topology_class = MeshTopology\n-#topology_params = \"num_switches=%d\" % num\n+num = 2\n+# topology_class = StarTopology\n+# topology_params = \"num_hosts=%d\" % num\n+topology_class = MeshTopology\n+topology_params = \"num_switches=%d\" % num\n # topology_class = GridTopology\n # topology_params = \"num_rows=3, num_columns=3\"\n # topology_class = BinaryLeafTreeTopology\n # topology_params = \"num_levels=%d\" % num\n \n-steps = None\n-results_dir = \"traces/onos-%s%d-steps%s\" % (topology_class.__name__, num, steps)\n+steps = 200\n+results_dir = \"traces/trace_onos-ifwd-%s%d-steps%s\" % (topology_class.__name__, num, steps)\n \n apps = None\n \ndiff --git a/sts/entities/base.py b/sts/entities/base.py\nindex 21ac80c..bac5854 100644\n--- a/sts/entities/base.py\n+++ b/sts/entities/base.py\n@@ -405,11 +405,11 @@ class LocalEntity(object):\n     process = popen_filtered(\"[%s]\" % self.label, cmd, self.cwd,\n                              shell=True, redirect_output=self.redirect_output)\n     output = \"\"\n+    if self.redirect_output:\n+      return ''\n     while True:\n       recv = process.stdout.read(100)  # arbitrary\n       output += recv\n       if recv == '' and process.poll() is not None:\n         break\n-    if self.redirect_output:\n-      return ''\n     return output\ndiff --git a/sts/entities/controllers.py b/sts/entities/controllers.py\nindex 6f0c716..6daefe1 100644\n--- a/sts/entities/controllers.py\n+++ b/sts/entities/controllers.py\n@@ -36,7 +36,7 @@ from sts.util.network_namespace import bind_pcap\n from sts.util.convenience import IPAddressSpace\n from sts.util.convenience import deprecated\n \n-from sts.entities.base import SSHEntity\n+from sts.entities.base import SSHEntity, LocalEntity\n from sts.entities.sts_entities import SnapshotPopen\n \n \n@@ -891,3 +891,43 @@ class DummyController(Controller):\n \n   def check_status(self, simulation):\n     return (True, 'ok')\n+  \n+class LogfileController(Controller):\n+  def __init__(self, controller_config, sync_connection_manager=None,\n+               snapshot_service=None):\n+    super(LogfileController, self).__init__(controller_config,\n+                                            sync_connection_manager,\n+                                            snapshot_service)\n+    self.state = ControllerState.ALIVE\n+\n+  @property\n+  def is_remote(self):\n+    return False\n+\n+  @property\n+  def blocked_peers(self):\n+    \"\"\"Return a list of blocked peer controllers (if any)\"\"\"\n+    return None\n+\n+  def start(self, multiplex_sockets=False):\n+    \"\"\"Starts the controller\"\"\"\n+    self.cmd_executor = LocalEntity(cwd=getattr(self.config, \"cwd\", None),\n+                                    redirect_output=True)\n+    assert hasattr(self.cmd_executor, \"execute_command\")\n+    self.cmd_executor.execute_command(self.config.start_cmd)\n+    return True\n+    \n+  def kill(self):\n+    self.state = ControllerState.DEAD\n+\n+  def block_peer(self, peer_controller):\n+    \"\"\"Ignore traffic to/from the given peer controller\n+    \"\"\"\n+    raise NotImplementedError\n+\n+  def unblock_peer(self, peer_controller):\n+    \"\"\"Stop ignoring traffic to/from the given peer controller\"\"\"\n+    raise NotImplementedError()\n+\n+  def check_status(self, simulation):\n+    return (True, 'ok')\ndiff --git a/sts/happensbefore/hb_logger.py b/sts/happensbefore/hb_logger.py\nindex dc333f4..1328571 100644\n--- a/sts/happensbefore/hb_logger.py\n+++ b/sts/happensbefore/hb_logger.py\n@@ -621,7 +621,7 @@ class HappensBeforeLogger(EventMixin):\n       in_dpid = self.swid_to_dpid(in_swid)\n       if in_dpid is None:\n         # the controller did not supply the dpid, no way for us to ever match it\n-        print 'Error: Discarding controller line: ' + line\n+        print 'Error: Discarding controller line: ' + str(line)\n         return True\n       else:\n         # we know this switch",
      "status": "On branch hb\nYour branch is up-to-date with 'origin/hb'.\n\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n\tmodified:   all_traces_add_outputs_to_git.sh\n\tmodified:   all_traces_generate_plots.sh\n\tmodified:   all_traces_generate_results.sh\n\tmodified:   config/experiment_config_lib.py\n\tmodified:   config/onos.py\n\tmodified:   sts/entities/base.py\n\tmodified:   sts/entities/controllers.py\n\tmodified:   sts/happensbefore/hb_logger.py\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\n\tall_traces_add_outputs_to_git.sh~\n\tall_traces_generate_plots.sh~\n\tall_traces_generate_results.sh~\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")"
    }
  },
  "sys": {
    "lsb_release": "Ubuntu 14.04.3 LTS",
    "uname": "Linux espresso 3.13.0-67-generic #110-Ubuntu SMP Fri Oct 23 13:24:41 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux"
  },
  "timestamp": "2015_11_08_16_32_22",
  "user": "jeremie"
}
