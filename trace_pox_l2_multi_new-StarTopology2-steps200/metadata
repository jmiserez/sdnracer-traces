{
  "additional_metadata": null,
  "argv": [
    "./simulator.py",
    "-c",
    "config/trace_pox_l2_multi_new.py"
  ],
  "cwd": "/home/ahassany/repos/jsts",
  "host": {
    "cpu_info": "Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz",
    "free": "total       used       free     shared    buffers     cached\nMem:       4045244     235832    3809412       5664      16344     126668\n-/+ buffers/cache:      92820    3952424\nSwap:      4192252          0    4192252",
    "name": "stsdev",
    "num_cores": "2",
    "uptime": "10:58:36 up 6 min,  1 user,  load average: 0.04, 0.07, 0.04"
  },
  "modules": {
    "hassel": {
      "branch": "HEAD",
      "commit": "31afb29fa66783f5a66765bc186509b65ffc023e",
      "diff": "",
      "status": "HEAD detached at 31afb29\nnothing to commit, working directory clean"
    },
    "pox": {
      "branch": "backport_l2_multi",
      "commit": "07563f9d56f2f7870cc1e39bbe286e5478209ad6",
      "diff": "diff --git a/pox/openflow/libopenflow_01.py b/pox/openflow/libopenflow_01.py\nindex 8c72ebd..e4f3117 100644\n--- a/pox/openflow/libopenflow_01.py\n+++ b/pox/openflow/libopenflow_01.py\n@@ -3013,7 +3013,7 @@ class ofp_packet_out (ofp_header):\n     self.buffer_id = -1\n     self.in_port = OFPP_NONE\n     self.actions = []\n-    self._data = ''\n+    self._data = b''\n \n     # ofp_flow_mod and ofp_packet_out do some special handling of 'actions'...\n \n@@ -3026,7 +3026,7 @@ class ofp_packet_out (ofp_header):\n     # Allow use of actions=<a single action> for kw args.\n     if not hasattr(self.actions, '__getitem__'):\n       self.actions = [self.actions]\n-\n+  \"\"\"\n   def _set_data(self, data):\n     assert_type(\"data\", data, (packet_base, str))\n     if data is None:\n@@ -3038,9 +3038,39 @@ class ofp_packet_out (ofp_header):\n   def _get_data(self):\n     return self._data\n   data = property(_get_data, _set_data)\n+  \"\"\"\n+  @property\n+  def data (self):\n+    return self._data\n+  @data.setter\n+  def data (self, data):\n+    if data is None:\n+      self._data = b''\n+    elif isinstance(data, packet_base):\n+      self._data = data.pack()\n+    elif isinstance(data, ofp_packet_in):\n+      # Enable you to easily resend a packet\n+      self._data = b''\n+      self.buffer_id = data.buffer_id\n+      if self.buffer_id is None:\n+        #TODO: It'd be nice to log and then ignore if data is incomplete\n+        #      Unfortunately, we currently have no logging in here, so we\n+        #      assert instead which is a either too drastic or too quiet.\n+        assert data.is_complete\n+        self._data = data._data\n+      self.in_port = data.in_port\n+    elif isinstance(data, bytes):\n+      self._data = data\n+    assert assert_type(\"data\", self._data, (bytes,))\n+\n+  def _validate (self):\n+    if self.buffer_id is not None and self.data != b'':\n+      return \"can not have both buffer_id and data set\"\n+    return None\n+\n \n   def _assert (self):\n-    if self.buffer_id != -1 and self.data != '':\n+    if self.buffer_id != -1 and self.data != b'':\n       return \"can not have both buffer_id and data set\"\n     return True",
      "status": "On branch backport_l2_multi\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n\tmodified:   pox/openflow/libopenflow_01.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")"
    },
    "sts": {
      "branch": "hb",
      "commit": "2663bbf89613989e20d49007a5f3fb857261944f",
      "diff": "diff --git a/config/fuzzer_params.py b/config/fuzzer_params.py\nindex 1807a9a..63b47b4 100644\n--- a/config/fuzzer_params.py\n+++ b/config/fuzzer_params.py\n@@ -11,7 +11,7 @@ link_failure_rate = 0.0\n link_recovery_rate = 1.0\n controller_crash_rate = 0.0\n controller_recovery_rate = 1.0\n-traffic_generation_rate = 0.10\n+traffic_generation_rate = 0.40\n host_migration_rate = 0.0\n intracontroller_block_rate = 0.0\n intracontroller_unblock_rate = 0.0\ndiff --git a/config/trace_floodlight_learningswitch.py b/config/trace_floodlight_learningswitch.py\nindex 9e7537a..dc020c8 100644\n--- a/config/trace_floodlight_learningswitch.py\n+++ b/config/trace_floodlight_learningswitch.py\n@@ -12,7 +12,7 @@ start_cmd = ('''java -ea -Dlogback.configurationFile=./src/main/resources/logbac\n              '''./target/floodlight.jar '''\n               '''-cf ./src/main/resources/trace_learningswitch.properties''')\n \n-controllers = [ControllerConfig(start_cmd, cwd='../floodlight', address=\"127.0.0.1\", port=6633)]\n+controllers = [ControllerConfig(start_cmd, cwd='../floodlight', address=\"127.0.0.1\", port=6633, controller_type='dummy')]\n \n # Uncomment this if you are running Floodlight separately, e.g. for debugging in Eclipse. There must be a controller listening on port 6633.\n # start_cmd = '''echo \"no-op\"'''\ndiff --git a/config/trace_pox_l2_consistency.py b/config/trace_pox_l2_consistency.py\nindex 7a79711..3dd18ed 100644\n--- a/config/trace_pox_l2_consistency.py\n+++ b/config/trace_pox_l2_consistency.py\n@@ -14,9 +14,9 @@ barriers= True\n \n # Use POX as our controller\n start_cmd = ('''./pox.py --verbose '''\n-             ''' forwarding.consistency --consistent=%s --deny=True '''\n+             ''' forwarding.consistency --consistent=%s --deny=False '''\n              ''' --update_wait=10 --update_once=False --consistent_wait=10 --barriers=%s '''\n-             ''' --in_flight_wait=5 --slow_update_wait=10 --update_wait=20 '''\n+             ''' --in_flight_wait=5 --slow_update_wait=10 --update_wait=10 '''\n              ''' openflow.of_01 --address=__address__ --port=__port__ ''' % (consistent, barriers))\n \n controllers = [ControllerConfig(start_cmd, cwd=\"pox/\")]\ndiff --git a/config/trace_pox_l2_multi.py b/config/trace_pox_l2_multi.py\nindex a935594..2b148c1 100644\n--- a/config/trace_pox_l2_multi.py\n+++ b/config/trace_pox_l2_multi.py\n@@ -19,17 +19,17 @@ start_cmd = ('''./pox.py --verbose '''\n \n controllers = [ControllerConfig(start_cmd, cwd=\"pox/\")]\n \n-num = 2\n-#topology_class = StarTopology\n-#topology_params = \"num_hosts=%d\" % num\n+num = 4\n+topology_class = StarTopology\n+topology_params = \"num_hosts=%d\" % num\n #topology_class = MeshTopology\n #topology_params = \"num_switches=%d\" % num\n # topology_class = GridTopology\n # topology_params = \"num_rows=3, num_columns=3\"\n-topology_class = BinaryLeafTreeTopology\n-topology_params = \"num_levels=%d\" % num\n+#topology_class = BinaryLeafTreeTopology\n+#topology_params = \"num_levels=%d\" % num\n \n-steps = 100\n+steps = 200\n # Where should the output files be written to\n results_dir = \"traces/trace_pox_l2_multi-%s%d-steps%s\" % (topology_class.__name__, num, steps)\n \ndiff --git a/pox b/pox\nindex ff35fb1..07563f9 160000\n--- a/pox\n+++ b/pox\n@@ -1 +1 @@\n-Subproject commit ff35fb1f40f8055b757e2a60e49097e5eb751f0b\n+Subproject commit 07563f9d56f2f7870cc1e39bbe286e5478209ad6-dirty",
      "status": "On branch hb\nYour branch is up-to-date with 'origin/hb'.\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n  (commit or discard the untracked or modified content in submodules)\n\n\tmodified:   config/fuzzer_params.py\n\tmodified:   config/trace_floodlight_learningswitch.py\n\tmodified:   config/trace_pox_l2_consistency.py\n\tmodified:   config/trace_pox_l2_multi.py\n\tmodified:   pox (new commits, modified content)\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\n\tconfig/pox_consistency.py\n\tconfig/trace_onos_hb_learningswitch.py\n\tconfig/trace_pox_l2_multi_new.py\n\tgen.sh~\n\tmultipage.pdf\n\tshort.txt\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")"
    }
  },
  "sys": {
    "lsb_release": "Ubuntu 15.04",
    "uname": "Linux stsdev 3.19.0-26-generic #28-Ubuntu SMP Tue Aug 11 14:16:32 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux"
  },
  "timestamp": "2015_10_27_10_58_36",
  "user": "ahassany"
}
