{
  "additional_metadata": null,
  "argv": [
    "./simulator.py",
    "-c",
    "config/trace_pox_l2_multi_new.py"
  ],
  "cwd": "/home/ahassany/repos/jsts",
  "host": {
    "cpu_info": "Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz",
    "free": "total       used       free     shared    buffers     cached\nMem:       4045244     330828    3714416       5664      34700     180212\n-/+ buffers/cache:     115916    3929328\nSwap:      4192252          0    4192252",
    "name": "stsdev",
    "num_cores": "2",
    "uptime": "00:01:22 up 3 days,  6:10,  1 user,  load average: 0.16, 0.09, 0.06"
  },
  "modules": {
    "hassel": {
      "branch": "HEAD",
      "commit": "31afb29fa66783f5a66765bc186509b65ffc023e",
      "diff": "",
      "status": "HEAD detached at 31afb29\nnothing to commit, working directory clean"
    },
    "pox": {
      "branch": "hb",
      "commit": "bdd8a411b6fbbd7cfd50088fc67a86d5a282d5b0",
      "diff": "diff --git a/pox/openflow/libopenflow_01.py b/pox/openflow/libopenflow_01.py\nindex 8c72ebd..bdda746 100644\n--- a/pox/openflow/libopenflow_01.py\n+++ b/pox/openflow/libopenflow_01.py\n@@ -1089,7 +1089,10 @@ class ofp_action_output (object):\n     return outstr\n \n   def __repr__(self):\n-    return \"ofp_action_output(port=%s)\" % str(self.port)\n+    port = self.port\n+    inv_map = {v: k for k, v in ofp_port_rev_map.iteritems()}\n+    port = inv_map.get(port, port)\n+    return \"ofp_action_output(port=%s)\" % str(port)\n \n class ofp_action_enqueue (object):\n   def __init__ (self, **kw):\ndiff --git a/pox/openflow/of_01.py b/pox/openflow/of_01.py\nindex 966b408..add65c4 100644\n--- a/pox/openflow/of_01.py\n+++ b/pox/openflow/of_01.py\n@@ -656,8 +656,10 @@ class Connection (EventMixin):\n                       of.ofp_type_rev_map['OFPT_BARRIER_REPLY']):\n         encoded_msgin = self.base64_encode_raw(self.buf[0:packet_length])\n         self.print_msgin(self.dpid, encoded_msgin)\n+        print \"XXX SET CURRENT MSGIN\", (self.dpid, self.buf)\n         Connection._hb_current_msgin = (self.dpid, encoded_msgin)\n       else:\n+        print \"XXX CURRENT MSGIN IS NONE\", self.dpid, ofp_type\n         Connection._hb_current_msgin = None\n       \n       msg = classes[ofp_type]()\n@@ -681,6 +683,7 @@ class Connection (EventMixin):\n                       (\"\\n\" + str(self) + \" \").join(str(msg).split('\\n')))\n         continue\n       finally:\n+        print \"XXX EXCEPTION MSGIN IS NONE\", self.dpid, ofp_type\n         Connection._hb_current_msgin = None\n     return True",
      "status": "On branch hb\nYour branch is up-to-date with 'origin/hb'.\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n\tmodified:   pox/openflow/libopenflow_01.py\n\tmodified:   pox/openflow/of_01.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")"
    },
    "sts": {
      "branch": "hb",
      "commit": "2b1c52b1a93c9f5f343759996f25215f91251a78",
      "diff": "diff --git a/config/fuzzer_params.py b/config/fuzzer_params.py\nindex 300d22f..1807a9a 100644\n--- a/config/fuzzer_params.py\n+++ b/config/fuzzer_params.py\n@@ -11,7 +11,7 @@ link_failure_rate = 0.0\n link_recovery_rate = 1.0\n controller_crash_rate = 0.0\n controller_recovery_rate = 1.0\n-traffic_generation_rate = 0.05\n+traffic_generation_rate = 0.10\n host_migration_rate = 0.0\n intracontroller_block_rate = 0.0\n intracontroller_unblock_rate = 0.0\ndiff --git a/config/trace_floodlight_learningswitch.py b/config/trace_floodlight_learningswitch.py\nindex 9e7537a..dc020c8 100644\n--- a/config/trace_floodlight_learningswitch.py\n+++ b/config/trace_floodlight_learningswitch.py\n@@ -12,7 +12,7 @@ start_cmd = ('''java -ea -Dlogback.configurationFile=./src/main/resources/logbac\n              '''./target/floodlight.jar '''\n               '''-cf ./src/main/resources/trace_learningswitch.properties''')\n \n-controllers = [ControllerConfig(start_cmd, cwd='../floodlight', address=\"127.0.0.1\", port=6633)]\n+controllers = [ControllerConfig(start_cmd, cwd='../floodlight', address=\"127.0.0.1\", port=6633, controller_type='dummy')]\n \n # Uncomment this if you are running Floodlight separately, e.g. for debugging in Eclipse. There must be a controller listening on port 6633.\n # start_cmd = '''echo \"no-op\"'''\ndiff --git a/config/trace_pox_eel_l2_learning.py b/config/trace_pox_eel_l2_learning.py\nindex f983381..b2637bc 100644\n--- a/config/trace_pox_eel_l2_learning.py\n+++ b/config/trace_pox_eel_l2_learning.py\n@@ -19,11 +19,11 @@ controllers = [ControllerConfig(start_cmd, cwd=\"../pox/\")]\n \n \n \n-num = 1\n-topology_class = StarTopology\n-topology_params = \"num_hosts=%d\" % num\n-# topology_class = MeshTopology\n-# topology_params = \"num_switches=%d\" % num\n+num = 2\n+#topology_class = StarTopology\n+#topology_params = \"num_hosts=%d\" % num\n+#topology_class = MeshTopology\n+#topology_params = \"num_switches=%d\" % num\n # topology_class = GridTopology\n # topology_params = \"num_rows=3, num_columns=3\"\n topology_class = BinaryLeafTreeTopology\n@@ -31,7 +31,7 @@ topology_params = \"num_levels=%d\" % num\n \n steps = 200\n # Where should the output files be written to\n-results_dir = \"traces/trace_pox_eel_l2_learning-%s%d-steps%s\" % (topology_class.__name__, num, steps)\n+results_dir = \"traces/trace_pox_eel_learningswitch-%s%d-steps%s\" % (topology_class.__name__, num, steps)\n \n apps = None\n \ndiff --git a/config/trace_pox_l2_multi.py b/config/trace_pox_l2_multi.py\nindex a935594..da849d8 100644\n--- a/config/trace_pox_l2_multi.py\n+++ b/config/trace_pox_l2_multi.py\n@@ -20,16 +20,16 @@ start_cmd = ('''./pox.py --verbose '''\n controllers = [ControllerConfig(start_cmd, cwd=\"pox/\")]\n \n num = 2\n-#topology_class = StarTopology\n-#topology_params = \"num_hosts=%d\" % num\n-#topology_class = MeshTopology\n-#topology_params = \"num_switches=%d\" % num\n+topology_class = StarTopology\n+topology_params = \"num_hosts=%d\" % num\n+topology_class = MeshTopology\n+topology_params = \"num_switches=%d\" % num\n # topology_class = GridTopology\n # topology_params = \"num_rows=3, num_columns=3\"\n-topology_class = BinaryLeafTreeTopology\n-topology_params = \"num_levels=%d\" % num\n+#topology_class = BinaryLeafTreeTopology\n+#topology_params = \"num_levels=%d\" % num\n \n-steps = 100\n+steps = 200\n # Where should the output files be written to\n results_dir = \"traces/trace_pox_l2_multi-%s%d-steps%s\" % (topology_class.__name__, num, steps)\n \ndiff --git a/format_results.py b/format_results.py\nindex 42ae722..aeb678a 100755\n--- a/format_results.py\n+++ b/format_results.py\n@@ -33,6 +33,8 @@ keys.append('num_per_pkt_inconsistent')\n keys.append('num_per_pkt_inconsistent_covered')\n keys.append('num_per_pkt_entry_version_race')\n keys.append('num_per_pkt_inconsistent_no_repeat')\n+keys.append('num_versions')\n+keys.append('num_racing_versions')\n \n \n table_keys = ['rw_delta', 'ww_delta', 'alt_barr', 'data_deps']\ndiff --git a/pox b/pox\n--- a/pox\n+++ b/pox\n@@ -1 +1 @@\n-Subproject commit bdd8a411b6fbbd7cfd50088fc67a86d5a282d5b0\n+Subproject commit bdd8a411b6fbbd7cfd50088fc67a86d5a282d5b0-dirty\ndiff --git a/sts/happensbefore/hb_graph.py b/sts/happensbefore/hb_graph.py\nindex f961bf9..7f4284c 100755\n--- a/sts/happensbefore/hb_graph.py\n+++ b/sts/happensbefore/hb_graph.py\n@@ -1184,7 +1184,8 @@ class HappensBeforeGraph(object):\n     versions = self.find_versions()\n \n     # TODO(jm): Could we check the races directly instead of creating the ww_races variable?\n-    \n+    racing_versions_tuples = []\n+\n     ww_races = defaultdict(list)\n     for race in self.race_detector.races_harmful:\n       if race.rtype == 'w/w':\n@@ -1208,7 +1209,9 @@ class HappensBeforeGraph(object):\n         if eid2 in cmds:\n           v2 = version\n       racing_versions.append((v1, v2, (eid1, eid2), (versions[v1], versions[v2])))\n-    return racing_versions\n+      if set([v1, v2]) not in racing_versions_tuples:\n+        racing_versions_tuples.append(set([v1, v2]))\n+    return racing_versions, racing_versions_tuples\n \n   def print_versions(self, versions):\n     # Printing versions\n@@ -1323,7 +1326,7 @@ class Main(object):\n       self.graph.find_per_packet_inconsistent(covered_races, True)\n     t7 = time.time()\n \n-    racing_versions = self.graph.find_inconsistent_updates()\n+    racing_versions, racing_versions_tuples = self.graph.find_inconsistent_updates()\n     t8 = time.time()\n     \n     if not self.no_dot_files:\n@@ -1356,7 +1359,8 @@ class Main(object):\n     print \"Number of commuting races: \", len(self.graph.race_detector.races_commute)\n     print \"Number of harmful races: \", len(self.graph.race_detector.races_harmful)\n     print \"Number of covered races: \", len(covered_races)\n-    print \"Inconsistent updates:\", len(racing_versions)\n+    print \"Number of versions:\", len(versions)\n+    print \"Inconsistent updates:\", len(racing_versions_tuples)\n \n     load_time = t1 - t0\n     detect_races_time = t2 - t1\n@@ -1448,6 +1452,8 @@ class Main(object):\n       f.write('num_per_pkt_inconsistent_covered,%d\\n' % num_per_pkt_inconsistent_covered)\n       f.write('num_per_pkt_entry_version_race,%d\\n' % num_per_pkt_entry_version_race)\n       f.write('num_per_pkt_inconsistent_no_repeat,%d\\n' % num_per_pkt_inconsistent_no_repeat)\n+      f.write('num_versions,%d\\n' % len(versions))\n+      f.write('num_racing_versions,%d\\n' % len(racing_versions_tuples))\n \n     with open(timings_file_name, 'w') as f:\n       write_general_info_to_file(f)",
      "status": "On branch hb\nYour branch and 'origin/hb' have diverged,\nand have 1 and 6 different commits each, respectively.\n  (use \"git pull\" to merge the remote branch into yours)\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n  (commit or discard the untracked or modified content in submodules)\n\n\tmodified:   config/fuzzer_params.py\n\tmodified:   config/trace_floodlight_learningswitch.py\n\tmodified:   config/trace_pox_eel_l2_learning.py\n\tmodified:   config/trace_pox_l2_multi.py\n\tmodified:   format_results.py\n\tmodified:   pox (modified content)\n\tmodified:   sts/happensbefore/hb_graph.py\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\n\t59629CROSS_FILE\n\tCROSS_TIMINGS_FILE\n\tconfig/floodlight_loxigen_learningswitch.py\n\tconfig/pox_consistency.py\n\tconfig/trace_pox_l2_multi_new.py\n\tcross_summary.csv\n\tcross_summary_timings.csv\n\tgen.sh~\n\tshort.txt\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")"
    }
  },
  "sys": {
    "lsb_release": "Ubuntu 15.04",
    "uname": "Linux stsdev 3.19.0-26-generic #28-Ubuntu SMP Tue Aug 11 14:16:32 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux"
  },
  "timestamp": "2015_11_10_00_01_22",
  "user": "ahassany"
}
