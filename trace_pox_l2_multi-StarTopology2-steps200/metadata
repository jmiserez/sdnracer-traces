{
  "additional_metadata": null,
  "argv": [
    "./simulator.py",
    "-c",
    "config/trace_pox_l2_multi.py"
  ],
  "cwd": "/home/ahassany/repos/jsts",
  "host": {
    "cpu_info": "Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz",
    "free": "total       used       free     shared    buffers     cached\nMem:       4045244     190620    3854624       5664      16952      82316\n-/+ buffers/cache:      91352    3953892\nSwap:      4192252          0    4192252",
    "name": "stsdev",
    "num_cores": "2",
    "uptime": "20:27:25 up  1:40,  1 user,  load average: 0.09, 0.03, 0.05"
  },
  "modules": {
    "hassel": {
      "branch": "HEAD",
      "commit": "31afb29fa66783f5a66765bc186509b65ffc023e",
      "diff": "",
      "status": "HEAD detached at 31afb29\nnothing to commit, working directory clean"
    },
    "pox": {
      "branch": "hb",
      "commit": "a7a0bab1388a0ff4d1cd729fd395f10ae749af79",
      "diff": "",
      "status": "On branch hb\nYour branch is up-to-date with 'origin/hb'.\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\n\tpox/forwarding/l2_multi_new.py\n\nnothing added to commit but untracked files present (use \"git add\" to track)"
    },
    "sts": {
      "branch": "hb",
      "commit": "0010c1b3601af82715d05c504fc7abb19c9829df",
      "diff": "diff --git a/config/fuzzer_params.py b/config/fuzzer_params.py\nindex 9c29ae3..1807a9a 100644\n--- a/config/fuzzer_params.py\n+++ b/config/fuzzer_params.py\n@@ -11,7 +11,7 @@ link_failure_rate = 0.0\n link_recovery_rate = 1.0\n controller_crash_rate = 0.0\n controller_recovery_rate = 1.0\n-traffic_generation_rate = 0.1\n+traffic_generation_rate = 0.10\n host_migration_rate = 0.0\n intracontroller_block_rate = 0.0\n intracontroller_unblock_rate = 0.0\ndiff --git a/config/trace_pox_l2_multi.py b/config/trace_pox_l2_multi.py\nindex 4358d56..b11a2cb 100644\n--- a/config/trace_pox_l2_multi.py\n+++ b/config/trace_pox_l2_multi.py\n@@ -1,12 +1,14 @@\n from config.experiment_config_lib import ControllerConfig\n-from sts.topology import StarTopology, BufferedPatchPanel, MeshTopology, GridTopology, BinaryLeafTreeTopology\n+from sts.topology import StarTopology\n+from sts.topology import BufferedPatchPanel\n+from sts.topology import MeshTopology\n+from sts.topology import GridTopology\n+from sts.topology import BinaryLeafTreeTopology\n from sts.controller_manager import UserSpaceControllerPatchPanel\n from sts.control_flow.fuzzer import Fuzzer\n-from sts.control_flow.interactive import Interactive\n from sts.input_traces.input_logger import InputLogger\n from sts.simulation_state import SimulationConfig\n from sts.happensbefore.hb_logger import HappensBeforeLogger\n-from config.application_events import AppCircuitPusher\n \n \n \n@@ -17,15 +19,19 @@ start_cmd = ('''./pox.py --verbose '''\n \n controllers = [ControllerConfig(start_cmd, cwd=\"pox/\")]\n \n+num = 2\n topology_class = StarTopology\n-topology_params = \"num_hosts=3\"\n-# topology_class = MeshTopology\n-# topology_params = \"num_switches=6\"\n+topology_params = \"num_hosts=%d\" % num\n+#topology_class = MeshTopology\n+#topology_params = \"num_switches=%d\" % num\n # topology_class = GridTopology\n # topology_params = \"num_rows=3, num_columns=3\"\n+#topology_class = BinaryLeafTreeTopology\n+#topology_params = \"num_levels=%d\" % num\n \n+steps = 200\n # Where should the output files be written to\n-results_dir = \"experiments/dbg\"\n+results_dir = \"traces/trace_pox_l2_multi-%s%d-steps%s\" % (topology_class.__name__, num, steps)\n \n apps = None\n \n@@ -53,9 +59,11 @@ control_flow = Fuzzer(simulation_config,\n                       input_logger=InputLogger(),\n                       initialization_rounds=20,\n                       send_all_to_all=False,\n-                      check_interval=1,\n+                      check_interval=10,\n                       delay=0.1,\n                       halt_on_violation=True,\n+                      send_init_packets=False,\n+                      steps=steps,\n #                       invariant_check_name=\"check_everything\",\n                       invariant_check_name=\"InvariantChecker.check_liveness\",\n                       apps=apps)\n\\ No newline at end of file\ndiff --git a/pox b/pox\nindex c7d2bb3..a7a0bab 160000\n--- a/pox\n+++ b/pox\n@@ -1 +1 @@\n-Subproject commit c7d2bb3bb9262925c716ccaf90be3628974f4bd8\n+Subproject commit a7a0bab1388a0ff4d1cd729fd395f10ae749af79-dirty\ndiff --git a/sts/happensbefore/hb_graph.py b/sts/happensbefore/hb_graph.py\nindex 067691c..a699ce3 100755\n--- a/sts/happensbefore/hb_graph.py\n+++ b/sts/happensbefore/hb_graph.py\n@@ -737,7 +737,7 @@ class HappensBeforeGraph(object):\n         races.remove(i)\n     return races\n \n-  def find_inconsistent(self):\n+  def find_inconsistent(self, ignore_first=True):\n     \"\"\"\n     Finds all the races related each packet trace\n     \"\"\"\n@@ -749,15 +749,39 @@ class HappensBeforeGraph(object):\n         continue\n       if len(tmp) == 1:\n         send = trace.graph['host_send']\n-        if trace.has_edge(send.eid, tmp[0].i_event.eid) or\\\n-            trace.has_edge(send.eid, tmp[0].k_event.eid):\n+        if ignore_first and (trace.has_edge(send.eid, tmp[0].i_event.eid) or\n+                               trace.has_edge(send.eid, tmp[0].k_event.eid)):\n           print \"Ignoring race for on the first switch: for %s->%s\" % (str(send.packet.src), str(send.packet.dst))\n           just_first = True\n           #continue\n       races.append((trace, tmp, just_first))\n     return races\n \n-  def print_racing_packet_trace(self, result_dir, trace, races, just_first=False):\n+  def summarize_per_packet_inconsistent(self, traces_races, add_just_first=True):\n+    \"\"\"\n+    \"\"\"\n+    result = {}\n+    removed = defaultdict(list)\n+    for trace, races, just_first in traces_races:\n+      if just_first and not add_just_first:\n+        continue\n+      # First get the writes\n+      writes = []\n+      for race in races:\n+        if isinstance(race.i_op, TraceSwitchFlowTableWrite):\n+          writes.append(race.i_op.eid)\n+        if isinstance(race.k_op, TraceSwitchFlowTableWrite):\n+          writes.append(race.k_op.eid)\n+      key = (tuple(sorted(writes)), just_first)\n+      if key in result:\n+        removed[key].append((trace, races, just_first))\n+        self.print_racing_packet_trace(self.results_dir, trace, races, just_first, name=\"trimmed\")\n+      else:\n+        result[key] = (trace, races, just_first)\n+    return result.values()\n+\n+\n+  def print_racing_packet_trace(self, result_dir, trace, races, just_first=False, name=None):\n     \"\"\"\n     first is the trace\n     second is the list of races\n@@ -780,7 +804,10 @@ class HappensBeforeGraph(object):\n     else:\n       rtype = 'race'\n       msg = \"race\"\n-    name = \"/%s/%s_%s_%s_%d.dot\" % (result_dir, rtype, src, dst, host_send.eid)\n+    if name:\n+      name = \"/%s/%s_%s_%s_%d.dot\" % (result_dir, name, src, dst, host_send.eid)\n+    else:\n+      name = \"/%s/%s_%s_%s_%d.dot\" % (result_dir, rtype, src, dst, host_send.eid)\n     print \"Storing packet %s for %s->%s in %s \" % (msg, src, dst, name)\n     nx.write_dot(g, name)\n \n@@ -866,7 +893,8 @@ class Main(object):\n     t4 = time.time()\n     self.graph.store_traces(self.results_dir)\n     t5 = time.time()\n-    packet_races = self.graph.find_inconsistent()\n+    packet_races = self.graph.find_inconsistent(False)\n+    summarized = self.graph.summarize_per_packet_inconsistent(packet_races, add_just_first=False)\n     inconsistent_packet_traces = []\n     for trace, races, just_first in packet_races:\n       self.graph.print_racing_packet_trace(self.results_dir, trace, races, just_first)\n@@ -876,6 +904,7 @@ class Main(object):\n     t6 = time.time()\n \n     print \"Number of packet inconsistencies: \", len(inconsistent_packet_traces)\n+    print \"Number of packet inconsistencies after trimming repeated races: \", len(summarized)\n \n     print \"Done. Time elapsed: \"+(str(t4-t0))+\"s\"\n     print \"load_trace: \"+(str(t1-t0))+\"s\"\ndiff --git a/sts/happensbefore/hb_race_detector.py b/sts/happensbefore/hb_race_detector.py\nindex 24e1d3f..c8e8f7e 100644\n--- a/sts/happensbefore/hb_race_detector.py\n+++ b/sts/happensbefore/hb_race_detector.py\n@@ -244,6 +244,7 @@ class RaceDetector(object):\n     self.total_races = self.total_harmful + self.total_commute\n \n   def print_races(self):\n+    #\"\"\"\n     for race in self.races_commute:\n       print \"+-------------------------------------------+\"\n       print \"| Commuting ({}):     {:>4} <---> {:>4}      |\".format(race.rtype, race.i_event.eid, race.k_event.eid)\n@@ -273,7 +274,8 @@ class RaceDetector(object):\n       print \"| {:>4}: {:28} (read) |\".format(ev[0].eid, ev[0].type)\n     for ev in self.write_operations:\n       print \"| {:>4}: {:27} (write) |\".format(ev[0].eid, ev[0].type)\n-    print \"| Total operations:      {:<18} |\".format(self.total_operations)\n+    #\"\"\"\n+    print \"| Total operations:{:<3} (Read={:<3}, Write={:<3}) |\".format(self.total_operations, len(self.read_operations), len(self.write_operations))\n     print \"|-------------------------------------------|\"\n     print \"| Total commuting races: {:<18} |\".format(self.total_commute)\n     print \"| Total harmful races:   {:<18} |\".format(self.total_harmful)",
      "status": "On branch hb\nYour branch is up-to-date with 'origin/hb'.\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n  (commit or discard the untracked or modified content in submodules)\n\n\tmodified:   config/fuzzer_params.py\n\tmodified:   config/trace_pox_l2_multi.py\n\tmodified:   pox (new commits, untracked content)\n\tmodified:   sts/happensbefore/hb_graph.py\n\tmodified:   sts/happensbefore/hb_race_detector.py\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\n\tconfig/pox_consistency.py\n\tconfig/trace_onos_hb_learningswitch.py\n\tgen.sh\n\tgen.sh~\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")"
    }
  },
  "sys": {
    "lsb_release": "Ubuntu 15.04",
    "uname": "Linux stsdev 3.19.0-26-generic #28-Ubuntu SMP Tue Aug 11 14:16:32 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux"
  },
  "timestamp": "2015_09_18_20_27_25",
  "user": "ahassany"
}
