{
  "additional_metadata": null,
  "argv": [
    "./simulator.py",
    "-c",
    "config/trace_pox_l2_multi_new.py"
  ],
  "cwd": "/home/ahassany/repos/jsts",
  "host": {
    "cpu_info": "Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz",
    "free": "total       used       free     shared    buffers     cached\nMem:       4045244     272104    3773140       5664      17996     158088\n-/+ buffers/cache:      96020    3949224\nSwap:      4192252          0    4192252",
    "name": "stsdev",
    "num_cores": "2",
    "uptime": "16:01:47 up  3:34,  1 user,  load average: 0.12, 0.11, 0.07"
  },
  "modules": {
    "hassel": {
      "branch": "HEAD",
      "commit": "31afb29fa66783f5a66765bc186509b65ffc023e",
      "diff": "",
      "status": "HEAD detached at 31afb29\nnothing to commit, working directory clean"
    },
    "pox": {
      "branch": "hb",
      "commit": "bdd8a411b6fbbd7cfd50088fc67a86d5a282d5b0",
      "diff": "diff --git a/pox/forwarding/l2_multi.py b/pox/forwarding/l2_multi.py\nindex f1df926..176cb92 100644\n--- a/pox/forwarding/l2_multi.py\n+++ b/pox/forwarding/l2_multi.py\n@@ -153,8 +153,8 @@ class Switch (EventMixin):\n   def _install (self, switch, port, match, buf = -1):\n     msg = of.ofp_flow_mod()\n     msg.match = match\n-    msg.idle_timeout = 10\n-    msg.hard_timeout = 30\n+    msg.idle_timeout = 1000\n+    msg.hard_timeout = 3000\n     msg.actions.append(of.ofp_action_output(port = port))\n     msg.buffer_id = buf\n     switch.connection.send(msg)\ndiff --git a/pox/openflow/libopenflow_01.py b/pox/openflow/libopenflow_01.py\nindex 8c72ebd..bdda746 100644\n--- a/pox/openflow/libopenflow_01.py\n+++ b/pox/openflow/libopenflow_01.py\n@@ -1089,7 +1089,10 @@ class ofp_action_output (object):\n     return outstr\n \n   def __repr__(self):\n-    return \"ofp_action_output(port=%s)\" % str(self.port)\n+    port = self.port\n+    inv_map = {v: k for k, v in ofp_port_rev_map.iteritems()}\n+    port = inv_map.get(port, port)\n+    return \"ofp_action_output(port=%s)\" % str(port)\n \n class ofp_action_enqueue (object):\n   def __init__ (self, **kw):",
      "status": "On branch hb\nYour branch is behind 'origin/hb' by 1 commit, and can be fast-forwarded.\n  (use \"git pull\" to update your local branch)\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n\tmodified:   pox/forwarding/l2_multi.py\n\tmodified:   pox/openflow/libopenflow_01.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")"
    },
    "sts": {
      "branch": "hb",
      "commit": "bec3a5af15263e4c6088c5313535811c3ca15b91",
      "diff": "diff --git a/config/trace_floodlight_forwarding.py b/config/trace_floodlight_forwarding.py\nindex 9da6188..ea917ac 100644\n--- a/config/trace_floodlight_forwarding.py\n+++ b/config/trace_floodlight_forwarding.py\n@@ -6,21 +6,21 @@ from sts.control_flow.interactive import Interactive\n from sts.input_traces.input_logger import InputLogger\n from sts.simulation_state import SimulationConfig\n from sts.happensbefore.hb_logger import HappensBeforeLogger\n-from config.application_events import AppCircuitPusher\n+\n \n start_cmd = ('''java -ea -Dlogback.configurationFile=./src/main/resources/logback-trace.xml -jar '''\n              '''./target/floodlight.jar '''\n               '''-cf ./src/main/resources/trace_forwarding.properties''')\n \n-controllers = [ControllerConfig(start_cmd, cwd='../floodlight', address=\"127.0.0.1\", port=6633)]\n+controllers = [ControllerConfig(start_cmd, cwd='../jfloodlight', address=\"127.0.0.1\", port=6633)]\n \n # Uncomment this if you are running Floodlight separately, e.g. for debugging in Eclipse. There must be a controller listening on port 6633.\n # start_cmd = '''echo \"no-op\"'''\n # controllers = [ControllerConfig(start_cmd, cwd='../floodlight', address=\"127.0.0.1\", port=6633, controller_type='dummy')]\n \n-num = 1\n-# topology_class = StarTopology\n-# topology_params = \"num_hosts=%d\" % num\n+num = 2\n+#topology_class = StarTopology\n+#topology_params = \"num_hosts=%d\" % num\n #topology_class = MeshTopology\n #topology_params = \"num_switches=%d\" % num\n # topology_class = GridTopology\n@@ -54,7 +54,7 @@ simulation_config = SimulationConfig(controller_configs=controllers,\n \n control_flow = Fuzzer(simulation_config,\n                       input_logger=InputLogger(),\n-                      initialization_rounds=20,\n+                      initialization_rounds=100,\n                       send_all_to_all=False,\n                       check_interval=10,\n                       delay=0.1,\ndiff --git a/config/trace_floodlight_learningswitch.py b/config/trace_floodlight_learningswitch.py\nindex 9e7537a..ab567f9 100644\n--- a/config/trace_floodlight_learningswitch.py\n+++ b/config/trace_floodlight_learningswitch.py\n@@ -6,30 +6,31 @@ from sts.control_flow.interactive import Interactive\n from sts.input_traces.input_logger import InputLogger\n from sts.simulation_state import SimulationConfig\n from sts.happensbefore.hb_logger import HappensBeforeLogger\n-from config.application_events import AppCircuitPusher\n+\n \n start_cmd = ('''java -ea -Dlogback.configurationFile=./src/main/resources/logback-trace.xml -jar '''\n              '''./target/floodlight.jar '''\n               '''-cf ./src/main/resources/trace_learningswitch.properties''')\n \n-controllers = [ControllerConfig(start_cmd, cwd='../floodlight', address=\"127.0.0.1\", port=6633)]\n+controllers = [ControllerConfig(start_cmd, cwd='../jfloodlight', address=\"127.0.0.1\", port=6633)]\n \n # Uncomment this if you are running Floodlight separately, e.g. for debugging in Eclipse. There must be a controller listening on port 6633.\n # start_cmd = '''echo \"no-op\"'''\n # controllers = [ControllerConfig(start_cmd, cwd='../floodlight', address=\"127.0.0.1\", port=6633, controller_type='dummy')]\n \n-num = 1\n-# topology_class = StarTopology\n-# topology_params = \"num_hosts=%d\" % num\n-#topology_class = MeshTopology\n-#topology_params = \"num_switches=%d\" % num\n+num = 2\n+topology_class = StarTopology\n+topology_params = \"num_hosts=%d\" % num\n+topology_class = MeshTopology\n+topology_params = \"num_switches=%d\" % num\n # topology_class = GridTopology\n # topology_params = \"num_rows=3, num_columns=3\"\n-topology_class = BinaryLeafTreeTopology\n-topology_params = \"num_levels=%d\" % num\n+#topology_class = BinaryLeafTreeTopology\n+#topology_params = \"num_levels=%d\" % num\n \n steps = 200\n results_dir = \"traces/trace_floodlight_learningswitch-%s%d-steps%s\" % (topology_class.__name__, num, steps)\n+#results_dir = \"traces/ls_no_del2\"\n \n apps = None\n \ndiff --git a/config/trace_pox_eel_l2_learning.py b/config/trace_pox_eel_l2_learning.py\nindex f983381..b2637bc 100644\n--- a/config/trace_pox_eel_l2_learning.py\n+++ b/config/trace_pox_eel_l2_learning.py\n@@ -19,11 +19,11 @@ controllers = [ControllerConfig(start_cmd, cwd=\"../pox/\")]\n \n \n \n-num = 1\n-topology_class = StarTopology\n-topology_params = \"num_hosts=%d\" % num\n-# topology_class = MeshTopology\n-# topology_params = \"num_switches=%d\" % num\n+num = 2\n+#topology_class = StarTopology\n+#topology_params = \"num_hosts=%d\" % num\n+#topology_class = MeshTopology\n+#topology_params = \"num_switches=%d\" % num\n # topology_class = GridTopology\n # topology_params = \"num_rows=3, num_columns=3\"\n topology_class = BinaryLeafTreeTopology\n@@ -31,7 +31,7 @@ topology_params = \"num_levels=%d\" % num\n \n steps = 200\n # Where should the output files be written to\n-results_dir = \"traces/trace_pox_eel_l2_learning-%s%d-steps%s\" % (topology_class.__name__, num, steps)\n+results_dir = \"traces/trace_pox_eel_learningswitch-%s%d-steps%s\" % (topology_class.__name__, num, steps)\n \n apps = None\n \ndiff --git a/config/trace_pox_l2_multi.py b/config/trace_pox_l2_multi.py\nindex a935594..cea3820 100644\n--- a/config/trace_pox_l2_multi.py\n+++ b/config/trace_pox_l2_multi.py\n@@ -20,18 +20,19 @@ start_cmd = ('''./pox.py --verbose '''\n controllers = [ControllerConfig(start_cmd, cwd=\"pox/\")]\n \n num = 2\n-#topology_class = StarTopology\n-#topology_params = \"num_hosts=%d\" % num\n-#topology_class = MeshTopology\n-#topology_params = \"num_switches=%d\" % num\n+topology_class = StarTopology\n+topology_params = \"num_hosts=%d\" % num\n+topology_class = MeshTopology\n+topology_params = \"num_switches=%d\" % num\n # topology_class = GridTopology\n # topology_params = \"num_rows=3, num_columns=3\"\n topology_class = BinaryLeafTreeTopology\n topology_params = \"num_levels=%d\" % num\n \n-steps = 100\n+steps = 200\n # Where should the output files be written to\n results_dir = \"traces/trace_pox_l2_multi-%s%d-steps%s\" % (topology_class.__name__, num, steps)\n+#results_dir = \"traces/long_angler\"\n \n apps = None\n \n@@ -57,7 +58,7 @@ simulation_config = SimulationConfig(controller_configs=controllers,\n \n control_flow = Fuzzer(simulation_config,\n                       input_logger=InputLogger(),\n-                      initialization_rounds=20,\n+                      initialization_rounds=100,\n                       send_all_to_all=False,\n                       check_interval=10,\n                       delay=0.1,\ndiff --git a/config/trace_pox_l2_multi_new.py b/config/trace_pox_l2_multi_new.py\nindex 6b7a293..6a21d10 100644\n--- a/config/trace_pox_l2_multi_new.py\n+++ b/config/trace_pox_l2_multi_new.py\n@@ -15,17 +15,17 @@ from sts.happensbefore.hb_logger import HappensBeforeLogger\n # Use POX as our controller\n \n \n-start_cmd = (\" ./pox.py --verbose openflow.of_01 --address=__address__ --port=__port__  openflow.discovery forwarding.l2_multi_orig\")\n+start_cmd = (\" ./pox.py --verbose openflow.of_01 --address=__address__ --port=__port__  openflow.discovery forwarding.l2_multi\")\n \n #start_cmd = '''echo \"no-op\"'''\n #controllers = [ControllerConfig(start_cmd, cwd=\"pox/\", address=\"192.168.56.1\", port=6633, controller_type='dummy')]\n controllers = [ControllerConfig(start_cmd, cwd=\"/home/ahassany/repos/pox/\", port=6633)]\n \n num = 2\n-topology_class = StarTopology\n-topology_params = \"num_hosts=%d\" % num\n-topology_class = MeshTopology\n-topology_params = \"num_switches=%d\" % num\n+#topology_class = StarTopology\n+#topology_params = \"num_hosts=%d\" % num\n+#topology_class = MeshTopology\n+#topology_params = \"num_switches=%d\" % num\n # topology_class = GridTopology\n # topology_params = \"num_rows=3, num_columns=3\"\n topology_class = BinaryLeafTreeTopology\n@@ -33,7 +33,7 @@ topology_params = \"num_levels=%d\" % num\n \n steps = 200\n # Where should the output files be written to\n-results_dir = \"traces/trace_pox_eel_l2_multi-%s%d-steps%s\" % (topology_class.__name__, num, steps)\n+results_dir = \"traces/trace_pox_eel_l2_multi_fixed-%s%d-steps%s\" % (topology_class.__name__, num, steps)\n #results_dir = \"traces/ff_fixed\"\n \n apps = None\ndiff --git a/gen.sh b/gen.sh\nindex 423949d..ef8d2da 100755\n--- a/gen.sh\n+++ b/gen.sh\n@@ -24,13 +24,13 @@ generate_results(){\n   echo \"===============================================\"\n   echo \"Running HB Graph WITHOUT alt-barr and delta=inf\"\n   echo \"===============================================\"\n-  ./sts/happensbefore/hb_graph.py ${result_dir}/hb.json  --no-dot-files --pkt --data-deps 2>&1 | tee -a \"$teefile\"\n+  ./sts/happensbefore/hb_graph.py ${result_dir}/hb.json  --no-dot-files --pkt --data-deps --ignore_ethertypes=0 2>&1 | tee -a \"$teefile\"\n   for x in {0..10};\n   do\n     echo \"==============================================\"\n     echo \"Running HB Graph WITHOUT alt-barr and delta=$x\"\n     echo \"==============================================\"\n-    ./sts/happensbefore/hb_graph.py ${result_dir}/hb.json  --no-dot-files --pkt --rw_delta=$x --ww_delta=$x --hbt --data-deps 2>&1 | tee -a \"$teefile\"\n+    ./sts/happensbefore/hb_graph.py ${result_dir}/hb.json  --no-dot-files --pkt --rw_delta=$x --ww_delta=$x --hbt --data-deps --ignore_ethertypes=0 2>&1 | tee -a \"$teefile\"\n   done\n \n }\ndiff --git a/pox b/pox\nindex 85cf31d..bdd8a41 160000\n--- a/pox\n+++ b/pox\n@@ -1 +1 @@\n-Subproject commit 85cf31dba661265ad8d63f79e9f92fb55d12f383\n+Subproject commit bdd8a411b6fbbd7cfd50088fc67a86d5a282d5b0-dirty",
      "status": "On branch hb\nYour branch is up-to-date with 'origin/hb'.\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n  (commit or discard the untracked or modified content in submodules)\n\n\tmodified:   config/trace_floodlight_forwarding.py\n\tmodified:   config/trace_floodlight_learningswitch.py\n\tmodified:   config/trace_pox_eel_l2_learning.py\n\tmodified:   config/trace_pox_l2_multi.py\n\tmodified:   config/trace_pox_l2_multi_new.py\n\tmodified:   gen.sh\n\tmodified:   pox (new commits, modified content)\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\n\tconfig/floodlight_loxigen_learningswitch.py\n\tconfig/pox_consistency.py\n\tff/\n\ttt/\n\twith.dot\n\twithout.dot\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")"
    }
  },
  "sys": {
    "lsb_release": "Ubuntu 15.04",
    "uname": "Linux stsdev 3.19.0-26-generic #28-Ubuntu SMP Tue Aug 11 14:16:32 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux"
  },
  "timestamp": "2015_11_14_16_01_47",
  "user": "ahassany"
}
